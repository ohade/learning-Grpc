# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import test_pb2 as test__pb2


class FirstServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCombine = channel.unary_unary(
        '/hello.FirstService/GetCombine',
        request_serializer=test__pb2.FirstRequest.SerializeToString,
        response_deserializer=test__pb2.FirstResponse.FromString,
        )
    self.GetCombineClientStream = channel.stream_unary(
        '/hello.FirstService/GetCombineClientStream',
        request_serializer=test__pb2.FirstRequest.SerializeToString,
        response_deserializer=test__pb2.FirstResponse.FromString,
        )
    self.GetCombineServerStream = channel.unary_stream(
        '/hello.FirstService/GetCombineServerStream',
        request_serializer=test__pb2.FirstRequest.SerializeToString,
        response_deserializer=test__pb2.FirstResponse.FromString,
        )
    self.GetCombineAsync = channel.stream_stream(
        '/hello.FirstService/GetCombineAsync',
        request_serializer=test__pb2.FirstRequest.SerializeToString,
        response_deserializer=test__pb2.FirstResponse.FromString,
        )


class FirstServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCombine(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCombineClientStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCombineServerStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCombineAsync(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FirstServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCombine': grpc.unary_unary_rpc_method_handler(
          servicer.GetCombine,
          request_deserializer=test__pb2.FirstRequest.FromString,
          response_serializer=test__pb2.FirstResponse.SerializeToString,
      ),
      'GetCombineClientStream': grpc.stream_unary_rpc_method_handler(
          servicer.GetCombineClientStream,
          request_deserializer=test__pb2.FirstRequest.FromString,
          response_serializer=test__pb2.FirstResponse.SerializeToString,
      ),
      'GetCombineServerStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetCombineServerStream,
          request_deserializer=test__pb2.FirstRequest.FromString,
          response_serializer=test__pb2.FirstResponse.SerializeToString,
      ),
      'GetCombineAsync': grpc.stream_stream_rpc_method_handler(
          servicer.GetCombineAsync,
          request_deserializer=test__pb2.FirstRequest.FromString,
          response_serializer=test__pb2.FirstResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hello.FirstService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
